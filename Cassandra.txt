Cassandra

NTP????
-----------------------

Instalando o Java

sudo apt update

sudo apt install openjdk-8-jdk -y

java -version; javac -version

Achar a localização do JDK

which javac

readlink -f /usr/bin/javac

vai resultar no caminho do java para aplicar a variavel

(pegar apenas a pasta principal (antes de bin/javac)

editar arquivo ~/.bashrc

nano ~/.bashrc

Acrescentar ao final do arquivo

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64


----------------------------------------------

Instalando o python 2.7

sudo apt-get install python2.7 -y


----------------------------------------------

É interessante pelo ponto de vista de segurança a criação de um usuário especifico para
cada serviço.

----------------------------------------------
Fazer Download

wget https://dlcdn.apache.org/cassandra/3.11.11/apache-cassandra-3.11.11-bin.tar.gz

Descompactar arquivo

tar -xzf apache-cassandra-3.11.11-bin.tar.gz

Criar diretorio cassandra em opt e mover o diretorio do apache para a pasta criada

sudo mkdir /opt/cassandra && sudo mv apache-cassandra-3.11.11/ /opt/cassandra/

Entrar na pasta cassandra no opt

cd /opt/cassandra

criar um link simbolico

sudo ln -s /opt/cassandra/apache-cassandra-3.11.11 default

----------------------------------------------

Realizar a edição dos arquivo de configuração

cassandra.yaml

nano /opt/cassandra/default/conf/cassandra.yaml

cluster_name: -> Nome do cluster

listen_address: -> IP da máquina onde esta rodando o cassandra

rpc_address: -> IP da Propria máquina

seeds: -> Todos os IP's que tem o cassandra instalado (Tanto o ip local, quanto o ip das outras máquinas)

----------------------------------------------

Realizar a edição dos arquivo de configuração

Configurando memória do Cassandra

cassandra-env.sh

nano /opt/cassandra/default/conf/cassandra-env.sh

Observações:

- Possui um script shell que identifica o sistema operacional, e faz um calculo para definir a
quantidade de memoria que o Cassandra utilizará.

- É possivel definir o maximo de memoria que pode ser consumidade atraves de
uma variavel $MAX_HEAP_SIZE.

- Em $JMS, se declarado o valor. O mesmo será alocado integralmente para o Cassandra,não podendo ser 
utiizado por nenhum outro processo do sistema.

- Caso a memoria declarada não tenha disponivel (em $JMX), o programa é abortado.

- Se deixado para ser alocado de forma dinamica, é possivel ocorrer com que o mesmo seja instalado 
inicialmente e do mesmo alocar boa parte da memoria ram, sem os outros ainda estiverem utilizando. 
Possibilitando as outras ferramentas ficarem sem ram.

- Sempre que um serviço cai ou possui uma baixa performace, é importante verificar se o 
mesmo ocorreu devido a falta de memória ou a devido a configuração de baixo consumo de memoria.

----------------------------------------

Iniciar o cassandra

sh /opt/cassandra/default/bin/cassandra -f

Observação: O -f significa que será apresentado informações sobre o processo. Impedindo a utilização
do console.

Para parar o serviço, quando utilizado o -f, basta clicar o CTRL + C.

Caso executado sem o -f

kill `ps aux | grep 'cassandra' | awk '{print $2}'`

----------------------------------------

Verificar se o processo está sendo executado:

ps aux | grep 'cassandra'

----------------------------------------

Acessar CQLSH

Cria uma pasta em seu ambiente para armazenar estes Hacks ( Exercícios práticos de
laboratórios ), os Hacks serão inicialmente usados e criados para a prática dos conhecimentos
adquiridos no curso e posteriormente podem ser uma base de conhecimento para consulta.

sh /opt/cassandra/default/bin/cqlsh

----------------------------------------

Key Space -> Define o nivel de replicação do conteudo daquele espaço


---------------------------------------

Comandos

Criar uma keySpace

CREATE KEYSPACE killrvideo
WITH REPLICATION = {
 'class': 'SimpleStrategy',
 'replication_factor' : 1
};

Usar a Keyspace

USE killrvideo;


Criar uma Tabela

CREATE TABLE table1 (
 column1 TEXT,
 column2 TEXT,
 column3 INT,
 PRIMARY KEY (column1)
);

Criar uma tabela de usuários

CREATE TABLE users (
 user_id UUID,
 first_name TEXT,
 last_name TEXT,
 PRIMARY KEY (user_id)
);

Inserindo valores

INSERT INTO users (user_id, first_name, last_name)
VALUES (uuid(), 'Joseph', 'Chu');

INSERT INTO table1 (column1, column2, column3) VALUES ('Maria', 'maria', 30);

INSERT INTO table1 (column1, column2, column3) VALUES ('Thiago', 'Thiago', 29);

INSERT INTO table1 (column1, column2, column3) VALUES ('Mario', 'Marcio', 28);

Consultas

SELECT * FROM users;

SELECT first_name, last_name FROM users;

SELECT * FROM users WHERE user_id = 33f691b4-ce3a-4ef4-8930-1444f1041090;

o comando COPY .
Este comando permite importar e exportar dados do banco de dados cassandra

importando dados do csv table1data.csv

COPY table1 (column1, column2, column3) FROM 'table1data.csv';

Importando com cabeçalho

COPY table1 (column1, column2, column3) FROM 'table1data.csv'
WITH HEADER=true;


