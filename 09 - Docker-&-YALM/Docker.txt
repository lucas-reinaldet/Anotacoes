## Shell do container

# Para habilitar o shell de um container em execução, basta executar

docker exec -it servidor_web sh

## Úteis

# CTRL + D -> Sair do container

## Comandos

# Quando executado o comando pull, representa que será feito o download da imagem
# Observação: Será realizado o download do site "https://hub.docker.com"
# tag é opcional, caso não seja declarado, sempre será feito o download da tag
# "latest" (ultima). Ultima versão disponibilizada.
# Não é recomendado baixar a ultima versão disponibilizada
docker pull imagem:tag

# Quando executado o comando run, caso não exista a imagem localmente, 
# será feito a busca, download da imagem, criação de um container baseado 
# na imagem baixada e a sua execução.
# Observação: Será realizada a busca e download do site "https://hub.docker.com"
# tag é opcional, caso não seja declarado, sempre será feito o download da tag
# "latest" (ultima). Ultima versão disponibilizada.
# Não é recomendado baixar a ultima versão disponibilizada
docker run imagem:tag

# Verificar a versão do docker
docker --version

# Lista de comandos
docker --help
docker comando --help

# exemplo:	
docker container --help

# Listar todos os containers
docker container ls

# Listar todos os containers em execução
docker ps 

# Listar todos os containers em execução e parados
docker ps -a

# Iniciar / Ativar um container
docker container start id_container

# excluir uma imagem
# caso possua um container com essa imagem, 
# ou outra imagem baseada nessa, dará erro
# sendo necessário forçar sua exclusão ( -f )
# Desta maneira o Container será excluido também
docker image rm id_ou_nome [-f]

# listar as imagens locais
docker image ls

# inspecionar a imagem
docker image inspect nome_ou_id_image

# inspecionar o container
docker inspect nome_ou_id_container

# Criar uma image baseado em outra image
docker image tag image_baseada:tag_image nome_image:tag_image

# Executando o nginx sem ocupar o console 
docker run --name servidor_web -d -e NGINX_ENTRYPOINT_QUITE_LOGS=1 nginx:1.19.4-alpine

# Acessando a porta de um container
# Desta maneira, quando um container é iniciado e o mesmo é um container de serviço
# é disponibilizado uma porta de acesso, entretanto o mesmo não é acessado via
# localhost, já que é uma aplicação isolada. Desta maneira, é necessário indicar
# em qual porta do local host, esse container será acessado.
# Obs: Pode ser utilizado qualquer porta do localhost que não esteja sendo
# usada.
# É possível verificar a porta do serviço através do comando: "docker ps".
docker run -d -p porta_local_host:porta_servico_container imagem_servico:tag


# Criar um container dando nomenclatura baseado em uma image e ativar 
# o shell do cantainer
docker run --name nome_container --rm -i -t image:tag sh

# Criar um container e setando um volume para ele atraves da opcao -v
docker run -v "/var/www" --name nome_container -d -e [opcoes image] image:tag

# Habilitar o modo shell do container já em execução
docker exec -it nome_container sh

# iniciar a execução de um container
docker container start id_container

# Parar a execução de um container
docker container stop id_container

# Atualizar container 
apk update

# Adicionar editor de texto nano
apk add nano